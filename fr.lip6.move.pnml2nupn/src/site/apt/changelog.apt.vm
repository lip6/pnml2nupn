#*
 *  Copyright 2014-2021 Sorbonne Université, CNRS, LIP6, Paris, France
 *                     and Université Paris Nanterre, France
 *
 *  All rights reserved.   This program and the accompanying materials
 *  are made available under the terms of the Eclipse Public License v1.0
 *  which accompanies this distribution, and is available at
 *  http://www.eclipse.org/legal/epl-v10.html
 *
 *  Project leader / Initial Contributor:
 *    Lom Messan Hillah - <lom-messan.hillah@lip6.fr>
 *
 *  Contributors:
 *    Pierre Bouvier - <pierre.bouvier@inria.fr>
 *
 *#
 ------
Changelog of PNML to NUPN Converter ${project.version}
 ------
 ------
2022-02-24
 ------

Changelog

* What's new in version ${project.version}? (2022-02-24)

  * Switch to type-specific stream method on Long collections.
  
  * Remove support for the Bounds tool.
  
  * Remove dependency on cami2pnml.
  
  * Add explicit dependencies on logback and sfl4j.
  
  * Upgrade runtime environment to Java 17.

* What's new in version 3.3.0? (2021-12-10)

  * Merge pull request {{{https://github.com/lip6/pnml2nupn/pull/3}#3}} which allows the initial marking to be the empty set, as defined in the {{{https://cadp.inria.fr/man/nupn.html#sect3}NUPN manual}}.

* What's new in version 3.2.0? (2020-04-07)

  * Merge pull request {{{https://github.com/lip6/pnml2nupn/pull/2}#2}} which extends the notion of whitespace, as defined in the {{{https://mcc.lip6.fr/nupn.php}NUPN toolspecific section manual}}.

* What's new in version 3.1.0? (2019-10-18)
 
  * Fix bug on using place names and transition names.
  
  * Add options first.place.number and first.transition.number that allow the numbering of the output NUPN ids
   from an arbitrary number instead of 0..N-1 (default behavior). 

* What's new in version 3.0.2? (2019-10-02)

  * Remove useless synchronizations.
  
  * Add options use.place.names and use.transition.names. 
   They allow using node names instead of their ids in the mappings in the labels section in the NUPN file.   

* What's new in version 3.0.1? (2019-09-23)

  * Fix resource leaking and null pointer dereferencing issues.

* What's new in version 3.0.0? (2019-09-20)

  * Switch to new NUPN format. With the new format, *.places and *.trans files no longer exist as part of the 
   files output from the PNML to NUPN translation. 

* What's new in version 2.3.0? (2019-02-27)

  * Activate the native NUPN extraction mode from the NUPN toolspecific section in the PNML.
   Native NUPN extraction mode directly considers the information from the NUPN toolspecific section to build
   the resulting NUPN files (*.nupn, *.places, and *.trans). It also uses information from the rest of the PNML,
   but the NUPN toolspecific section provides the primary information used to build the .nupn file. 

* What's new in version 2.2.0?  (2019-02-27)

  * Add (not yet activated) option to preserve NUPN toolspecific section in native mode, without activating the naive translation strategy. 
   The resulting NUPN should thus directly be extracted from the NUPN toolspecific section in the PNML. 

* What's new in version 2.1.0?
  
  * Bug fix: the bug introduced in calculating min-in and min-out in version 2.0.0 was fixed.
  
  * Remove deprecated input options to the programme
  
  * Add option to preserve NUPN tool info section in mixed mode, i.e. while performing the naive translation strategy.
  
* What's new in version 2.0.0?
  
  * Bug fix: Even when transitions are conservative, they were reported as completely unsafe.
  
  * Bug fix: default inscriptions on arcs were not properly processed
  
  * Dependencies upgrade
   
  * This version is unstable, and known to have a bug in the generated NUPN, so please do not use it.

* What's new in version 1.5.4?
  
  * Bug fix: when there is only one initial place, the corresponding instruction (see the {{{http://cadp.inria.fr/man/nupn.html#sect2} NUPN manual page}}
    in the NUPN automatically assigns 0 as ID to the unique initial place (whatever its actual ID).   

* What's new in version 1.5.3?
  
  * Handles the case where Bounds cannot campute the bounds. Message in log warns about this case.
  
  * Dependency on PNML Framework 2.2.10

* What's new in version 1.5.1?

  * Debugged pattern matching on Bounds results.
 
  * Early and normal stops of the tool handled separately from emergency ones.  

* What's new in version 1.5.0?

  * This version handles the {{{http://mcc.lip6.fr/nupn.php}NUPN tool-specific section}} in the input PNML document, if it is included.
 The information in that tool-specific section is used to build the units structure in the resulting NUPN.

* What's new in version 1.4.1?

  * Debugged the Bounds tool results interpretation over infinite string pattern
  
  * The execution of the Bounds tool is now timed
  
  * Report on unsafe places in the log, when the net is unsafe (according to the Bounds tool)
  
  * The number of unsafe places to report is determined by the environment variable <<unsafe.places.nb.report>>
  
  * The {{{http://cadp.inria.fr/man/caesar.bdd.html#sect10}!unit_safe pragma}} is now inserted at the beginning of the .nupn if the net is 1-Safe

* What's new in version 1.4.0?

  * Refactored bounds checking option as unit safeness checking.
   
  * Introduced unit safeness checking only option, to stop the tool whatever the outcome of the unit safeness checking process.
  
  * Produced jar name is shorter (pnml2nupn instead of fr.lip6.move.pnml2nupn)

* What's new in version 1.3.2?

  * Transitions are numbered according to their order of appearance in the PNML file (Bugged. Will be fixed in the 1.4.x line).
  
  * Multiple arcs between two same nodes in the PNML are now handled (add tokens).

  * Places are numbered according to their order of appearance in the PNML file (Bugged. Will be fixed in the 1.4.x line).

* What's new in version 1.3.1?

  * Insertion of the information "total number of tokens contained in all initial places", in the pragma !multiple_initial_tokens #<nb-tokens> #<nb-places> <min>...<max>

* What's new in version 1.3.0?

  * Tool changes name: NUPN are produced, instead of BPN.
  
  * Produces the pragmas {{{http://cadp.inria.fr/man/caesar.bdd.html#sect9}!creator}}, {{{http://cadp.inria.fr/man/caesar.bdd.html#sect11}!multiple_initial_tokens}}
   and {{{http://cadp.inria.fr/man/caesar.bdd.html#sect12}!multiple_arcs}}. Consequently some properties are no longer supported (see following items).
   
  * The <<generate.unsafe>> property is no longer supported (still correctly handled at invocation time, but not processed during the translation).
  
  * The <<remove.unsafe.trans>> property is no longer supported (idem as above).
  
  * New Shell script to handle batch runs of the tool (Previous version, compatible until v1.2.2, is still provided). 


* What's new in version 1.2.2?

  * <<New feature>>: checks for the presence of unsafe arcs (inscription > 1) and reports them
  in a file <<*.unsafe.arcs>> if they are found. This behaviour is activated by an option and
  is exclusive of all the others (see {{{./usage.html}Usage page}}).

* What's new in version 1.2.1?

  * Bug fix: after having removed transitions connected to unsafe arcs,
  remaining transitions have 0 input place or 0 output place.
   
  * Bug fix: count of the remaining transitions in the log.
  
  * Singleton pattern for the PNML2BPN factory.
 
* What's new in version 1.2.0?

  * <<New feature>>: upon request, BPN can be generated even in case of unsafe initial places (marking > 1) or
  unsafe arcs (inscription > 1). See {{{./usage.html}Usage page}}.
  
  * <<New feature>>: transitions connected to unsafe arcs (incoming or outgoing) can be removed upon request.
   See {{{./usage.html}Usage page}}.
  
  * Outputs a <<*.unsafe.arcs>> file that documents removed arcs (when removal of transitions is requested).
  
  * Prints at the end of the logs tool signature and invocation parameters that were set.

* What's new in version 1.1.11?

  * Places id mapping file is now *.places instead of *.states
  
  * Improved documentation

* What's new in version 1.1.10?

  * Property to disable bounds checking (should be combined with forced BPN generation).
  
  * Handles the case of several initial places 

* What's new in version 1.1.9?

  * Force BPN generation even if the net is not 1-safe (checked by the Bounds tool).

* What's new in version 1.1.8?

  * NPE bug fix.

* What's new in version 1.1.7?

  * Bug fix on querying initial markings and non-marked place.
  
  * Bug fix on cleaning buffer in writing loop.
  
  * Transformation fails in the case where there is no marked place, 
  and where there are more then one marked place.

* What's new in version 1.1.6?

  * Relies on Cami2Pnml 2.1.8

* What's new in version 1.1.5?

  * Handles the case where there is just one place (then just one unit, which is the root one)
  
  * Error message in the case there is no place (root unit must have at least 2 sub-units,
   if it does not contain any place).


* What's new in version 1.1.4?

  * Transformation is refined: 
  
  	* places numbered from 0
  	
  	* transitions are ordred
  	
  	* root unit is the last
  	
  	* id mappings are split in 2 files, one for states and the other for transitions
  	
  	[]
  
  * Relies on Cami2PNML v2.1.6

* What's new in version 1.1.2?

  * Relies on Cami2PNML v2.1.5

* What's new in version 1.1.1?

  * Recursively scan directories, looking for PNML files.

* What's new in version 1.1.0?

  * Integration of the Bounds tool.

* What's new in version 1.0.0?

  * First stable release.
  
  []
 